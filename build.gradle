/*
 * This software is available under Apache License
 * Copyright (c) 2020
 */
import org.gradle.internal.os.OperatingSystem

// Pixel Version:
version = System.properties["PIXEL_RELEASE"]
if (version == null || version == "unspecified") {
    version = "SNAPSHOT"
}

ext {
    dependencyMap = [
            lwjgl  : "3.3.3",
            lombok : "1.18.32",
            junit  : "5.10.2",
            mockito: "4.8.0"
    ]
}

println("Java Version: ${JavaVersion.current()}")
println("Project Version: ${version}")
println("Android Home: ${System.getenv("ANDROID_HOME")}")

buildscript {
    ext {
        kotlin_version = '1.9.20'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://s01.oss.sonatype.org/content/repositories/releases/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    version = rootProject.version
    ext {
        namespace = "org.pixel"
    }
    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://s01.oss.sonatype.org/content/repositories/releases/" }
    }
}

subprojects { project ->
    apply plugin: "maven-publish"

    publishing {
        repositories {
            maven {
                url = project.version.endsWith('SNAPSHOT') ?
                        "https://s01.oss.sonatype.org/content/repositories/snapshots/" :
                        "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username = findProperty("sonatypeUsername") ?: System.getenv("SONATYPE_USERNAME")
                    password = findProperty("sonatypePassword") ?: System.getenv("SONATYPE_PASSWORD")
                }
            }
        }
    }

    tasks.withType(Javadoc).tap {
        configureEach {
            failOnError false
            options.addStringOption("Xdoclint:none", "-quiet")
            options.addStringOption("encoding", "UTF-8")
            options.addStringOption("charSet", "UTF-8")
        }
    }

    project.plugins.withType(JavaPlugin).whenPluginAdded {
        dependencies {
            // lombok
            compileOnly "org.projectlombok:lombok:${rootProject.ext.dependencyMap["lombok"]}"
            annotationProcessor "org.projectlombok:lombok:${rootProject.ext.dependencyMap["lombok"]}"

            // test:
            testImplementation "org.mockito:mockito-core:${rootProject.ext.dependencyMap["mockito"]}"
            testImplementation "org.junit.jupiter:junit-jupiter-api:${rootProject.ext.dependencyMap["junit"]}"
            testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${rootProject.ext.dependencyMap["junit"]}"
        }

        java {
            sourceCompatibility = JavaVersion.VERSION_17
            targetCompatibility = JavaVersion.VERSION_17
        }

        test {
            useJUnitPlatform()
        }

        jar {
            manifest {
                attributes(
                        "Implementation-Title": jar.getArchiveBaseName(),
                        "Implementation-Version": getArchiveVersion()
                )
            }
        }

        tasks.register('sourceJar', Jar) {
            archiveClassifier.set('sources')
            from sourceSets.main.allJava
        }

        tasks.register('javadocJar', Jar) {
            dependsOn javadoc
            archiveClassifier.set('javadoc')
            from javadoc.destinationDir
        }

        artifacts {
            archives jar
            archives sourceJar
            archives javadocJar
        }

        publishing {
            publications {
                mavenJava(MavenPublication) {
                    from components.java

                    groupId = project.namespace
                    artifactId = 'your-java-library'
                    version = '1.0.0'

                    // Additional POM information goes here
                }
            }
        }
    }
}
